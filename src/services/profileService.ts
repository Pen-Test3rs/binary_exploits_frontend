import axiosInstance from '../utils/axiosInterceptors';
import { AxiosRequestConfig, AxiosResponse } from 'axios';
import { apiUrls } from '../utils/apiUrls';
import { User, UserData } from '../models/user';
import { SettingsData } from '../models/settingsData';
import { DeleteAccountData } from '../models/deleteAccountData';

const responseBody = (response: AxiosResponse) => response.data;

const get = async (id: string, options? :AxiosRequestConfig): Promise<UserData> => {
    const url = `${apiUrls.USERS}${id}/`;
    return axiosInstance.get(url, options).then(responseBody);
};

const update = async (settingsData: SettingsData): Promise<User> => {
    const { email, newPassword, oldPassword } = settingsData;

    const data = Object.fromEntries(
        Object.entries({
            email: email,
            password: newPassword,
            oldPassword: oldPassword
        }).filter(([_, v]) => v != null && v.length > 0)
    );

    return axiosInstance.put(apiUrls.ME, data).then(responseBody);
};

const delete_ = async (data: DeleteAccountData) => {
    return axiosInstance
        .delete(apiUrls.ME, {
            data: {
                password: data.password
            }
        })
        .then(responseBody);
};

export const profileService = {
    get,
    update,
    delete: delete_
};
