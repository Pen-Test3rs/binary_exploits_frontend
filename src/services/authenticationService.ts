import { User } from '../models/user';
import axios from 'axios';
import { LoginData } from '../models/loginData';
import { RegisterData } from '../models/registerData';

const API_SERVER_URL = 'https://binexp.nitychoruk.pl'; //TODO - env

const getURL = (path: string) => {
    return API_SERVER_URL + path;
};

const mockedUser: User = {
    id: 123,
    username: 'H4ck3r',
    email: 'h4ck3r@example.pl'
};

const mockLoginUser = async (loginData: LoginData) => {
    return new Promise((resolve, reject) => {
        setTimeout(() => resolve(mockedUser), 1000); //3s delay
        // setTimeout(() => reject('erorrs'), 1000); //3s delay
    });
};

const loginUser = async (loginData: LoginData) => {
    return mockLoginUser(loginData); //TODO: remove this after integration with backend

    return new Promise((resolve, reject) => {
        axios
            .post(getURL('/user/login'), loginData)
            .then((response) => {
                // const { message, token, username } = response;
                //set cookies, token etc etc and return filled User object
                resolve(response);
            })
            .catch((err) => {
                console.log(err);
                reject('ups');
            });
    });
};

const mockRegisterUser = async (registerData: RegisterData) => {
    return new Promise((resolve, reject) => {
        setTimeout(() => resolve(mockedUser), 3000); //3s delay
        // setTimeout(() => reject('erorrs'), 1000); //3s delay
    });
};

const registerUser = async (registerData: RegisterData): Promise<User> => {
    // return mockRegisterUser(registerData); //TODO: remove this after integration with backend

    return new Promise((resolve, reject) => {
        const url = getURL('/api/v1/auth/register/');
        axios
            .post(url, registerData)
            .then((res) => {
                const data = res.data; //TODO: adjust REST api
                const user: User = {
                    id: data.id,
                    username: data.username,
                    email: data.email
                };
                resolve(user);
            })
            .catch((err) => {
                reject(err);
            });
    });
};

export const authService = {
    loginUser,
    registerUser
};
