import axiosInstance from '../utils/axiosInterceptors';
import { AxiosRequestConfig, AxiosResponse } from 'axios';
import { Article, ArticleCategory } from '../models/article';
import { apiUrls } from '../utils/apiUrls';

const responseBody = (response: AxiosResponse) => response.data;

const getAll = (options?: AxiosRequestConfig): Promise<ArticleCategory[]> => {
    return axiosInstance.get(apiUrls.ARTICLES, options).then(responseBody);
};

const testResolveTimeout = (options?: AxiosRequestConfig): Promise<ArticleCategory[]> => {
    return new Promise<ArticleCategory[]>(((resolve, reject) => {
        setTimeout(() => resolve([]), 2000)
    }))
};

const testResolveError = (options?: AxiosRequestConfig): Promise<ArticleCategory[]> => {
    return new Promise<ArticleCategory[]>(((resolve, reject) => {
        setTimeout(() => reject("testResolveError"), 2000)
    }))
};

const getOne = (id: string): Promise<Article> => {
    const url = `${apiUrls.ARTICLES}${id}/`;
    return axiosInstance.get(url).then(responseBody);
};

export const articlesService = {
    getAll,
    getOne,
    testResolveTimeout,
    testResolveError
};
