import { Remarkable } from 'remarkable';
import RemarkableReactRenderer from 'remarkable-react';
import code from '../components/remarkable-components/code';
import pre from '../components/remarkable-components/pre';
import blockquote from '../components/remarkable-components/blockquote';
import table from '../components/remarkable-components/table';
import img from '../components/remarkable-components/img';
import { injectTokenRecognizer } from './linkExtension';
import video from '../components/remarkable-components/video';
import attachment from '../components/remarkable-components/attachment';

const md = new Remarkable();
md.inline.ruler.enable(['sub', 'sup']);

md.renderer = new RemarkableReactRenderer({
    components: {
        blockquote: blockquote,
        code: code,
        pre: pre,
        table: table,
        img: img,
        video: video,
        attachment: attachment
    },
    tokens: {
        link_video_open: 'video',
        link_attachment_open: 'attachment'
    }
});

const rules = md.inline.ruler.getRules('');

// const origParser = rules.find((rule) => rule.name === 'links');
// dirty hack - there are no rule.name on production builds (probably optimized out)
// offset may change if remarkable library will be updated int the future
const origParser = rules[8];
if (origParser) {
    injectTokenRecognizer(md, origParser);
} else {
    console.error('Failed to inject custom links parser!');
}

const render = (text: string | undefined) => {
    return md.render(text || 'Brak zawarto≈õci');
};

export const markdown = {
    render
};
