import { Remarkable } from 'remarkable';
import RemarkableReactRenderer from 'remarkable-react';
import Code from '../components/remarkable-components/code';
import Pre from '../components/remarkable-components/pre';
import Blockquote from '../components/remarkable-components/blockquote';
import Table from '../components/remarkable-components/table';
import Img from '../components/remarkable-components/img';
import { injectTokenRecognizer } from './linkExtension';
import Video from '../components/remarkable-components/video';
import Attachment from '../components/remarkable-components/attachment';
import Gif from '../components/remarkable-components/gif';

const md = new Remarkable();
md.inline.ruler.enable(['sub', 'sup']);

md.renderer = new RemarkableReactRenderer({
    components: {
        blockquote: Blockquote,
        code: Code,
        pre: Pre,
        table: Table,
        img: Img,
        video: Video,
        attachment: Attachment,
        gif: Gif
    },
    tokens: {
        link_video_open: 'video',
        link_attachment_open: 'attachment',
        link_gif_open: 'gif'
    }
});

const rules = md.inline.ruler.getRules('');

// const origParser = rules.find((rule) => rule.name === 'links');
// dirty hack - there are no rule.name on production builds (probably optimized out)
// offset may change if remarkable library will be updated int the future
const origParser = rules[8];
if (origParser) {
    injectTokenRecognizer(md, origParser);
} else {
    console.error('Failed to inject custom links parser!');
}

const render = (text: string | undefined) => {
    return md.render(text || 'Brak zawarto≈õci');
};

export const markdown = {
    render
};
