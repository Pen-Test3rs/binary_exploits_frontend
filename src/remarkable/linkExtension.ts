import { Remarkable } from 'remarkable';
import { Link } from 'react-router-dom';
import { ContentToken, LinkOpenToken } from 'remarkable/lib';
import { stat } from 'fs';

enum LinkType {
    DEFAULT = 0,
    VIDEO,
    ATTACHMENT
}

const determineLinkType = (href: string) => {
    if (href.startsWith('video:')) {
        return LinkType.VIDEO;
    }

    if (href.startsWith('attachment:')) {
        return LinkType.ATTACHMENT;
    }

    return LinkType.DEFAULT;
};
//
const typeToComponentMapping: Record<LinkType, string> = {
    [LinkType.DEFAULT]: 'link_open',
    [LinkType.VIDEO]: 'link_video_open',
    [LinkType.ATTACHMENT]: 'link_attachment_open'
};

export const injectTokenRecognizer = (
    md: Remarkable,
    origParser: any // ???
) => {
    md.inline.ruler.at(
        'links',
        (state, silent) => {
            let ret = origParser(state, silent);
            if (!ret) {
                return ret;
            }

            console.log(state.tokens);
            for (let token of state.tokens) {
                if (token.type === 'link_open') {
                    const link = token as LinkOpenToken;
                    const type = determineLinkType(link.href);
                    if (type != LinkType.DEFAULT) {
                        const linkTokens = link.href.split(':').slice(1);
                        link.href = linkTokens.join(':');
                    }

                    const newType = typeToComponentMapping[type];
                    token.type = newType;
                }
            }

            return ret;
        },
        {}
    );
};
