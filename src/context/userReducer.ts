import { createSlice, PayloadAction } from '@reduxjs/toolkit';
import { User } from '../models/user';
import { RootState } from './store';

interface CurrentUserState {
    currentUser?: User;
}

const initialState: CurrentUserState = {
    currentUser: undefined
};

//TODO: save tokens to session storage
export const userSlice = createSlice({
    name: 'user',
    initialState,
    reducers: {
        registerFailure: (state) => {
            state.currentUser = undefined;
        },
        registerSuccess: (state, action) => {
            state.currentUser = action.payload;
        },
        loginFailure: (state) => {
            state.currentUser = undefined;
        },
        loginSuccess: (state, action) => {
            state.currentUser = action.payload;
        },
        logout: (state) => {
            state.currentUser = undefined;
            //TODO: clear tokens from session storage
        }
    }
});

export const { registerSuccess, registerFailure, loginSuccess, loginFailure, logout } = userSlice.actions;

export const isLoggedIn = (state: RootState) => state.userReducer.currentUser !== undefined;

export default userSlice.reducer;
