import React, { useState } from 'react';
import { useAppDispatch, useAppSelector } from '../../context/hooks';
import { currentUserData, updateUserData } from '../../context/userReducer';
import { useToasts } from 'react-toast-notifications';
import { User } from '../../models/user';
import { formTexts } from '../shared/form/formTexts';
import { AxiosError } from 'axios';
import SettingsForm from './settingsForm';
import { SettingsData } from '../../models/settingsData';
import { profileService } from '../../services/profileService';
import { useHistory } from 'react-router-dom';

const SettingsComponent = () => {
    const [loading, setLoading] = useState(false);
    const [errors, setErrors] = useState({});
    const { addToast } = useToasts();
    const dispatch = useAppDispatch();
    const history = useHistory();

    const updatedCalback = (user: User) => {
        setLoading(false);
        dispatch(updateUserData(user));

        const url = `/profile/${user.id}/`;
        history.push(url);
    };

    const errorCallback = (e: AxiosError) => {
        setLoading(false);

        const err = e.response?.data;
        console.log(err);
        if (err) {
            //TODO: handle update data errors
            const errorMap = {
                email: err?.email?.slice(0, 1),
                oldPassword: err?.oldPassword
            };
            setErrors(errorMap);
        } else {
            setErrors({});
            addToast(formTexts.settingsChangeError, {
                appearance: 'error'
            });
        }
    };

    const onSubmit = (data: SettingsData) => {
        if (loading || (!data.newPassword.length && !data.email.length)) {
            return;
        }

        setLoading(true);
        profileService.update(data).then(updatedCalback).catch(errorCallback);
    };

    return <SettingsForm loading={loading} backendErrors={errors} onSubmit={onSubmit} />;
};

export default SettingsComponent;
