import React, { useEffect, useState } from 'react';

import { RouteComponentProps } from 'react-router-dom';
import { articlesService } from '../../services/articlesService';
import { Article } from '../../models/article';
import LoadingSpinner from '../spinner/loadingSpinner';
import { markdown } from '../../remarkable/remarkable';
import SingleArticleContainer from '../styled-components/articles/SingleArticleContainer';

type TParams = { id: string };

const SingleArticleContent = ({ match }: RouteComponentProps<TParams>) => {
    const id = match.params.id;
    const [article, setArticle] = useState<Article>();
    const [loading, setLoading] = useState(true);

    useEffect(() => {
        articlesService
            .getOne(id)
            .then((res) => {
                console.log(res);
                setArticle(res);
            })
            .catch((err) => {
                //TODO: handle error
                console.error(err);
            })
            .finally(() => setLoading(false));
    }, []);

    return (
        <>
            {loading && <LoadingSpinner />}
            {!loading && <SingleArticleContainer>{markdown.render(article?.content)}</SingleArticleContainer>}
        </>
    );
};

export default SingleArticleContent;
