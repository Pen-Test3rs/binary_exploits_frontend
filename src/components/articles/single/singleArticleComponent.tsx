import { RouteComponentProps } from 'react-router-dom';
import React, { useEffect, useState } from 'react';
import { Article } from '../../../models/article';
import { articlesService } from '../../../services/articlesService';
import LoadingSpinner from '../../spinner/loadingSpinner';
import SingleArticleContent from './singleArticleContent';
import { useToasts } from 'react-toast-notifications';

type TParams = {
    id: string;
};

const SingleArticleComponent = ({ match }: RouteComponentProps<TParams>) => {
    const id = match.params.id;
    const [article, setArticle] = useState<Article>();
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(false);
    const { addToast } = useToasts();

    useEffect(() => {
        setLoading(true);
        articlesService
            .getOne(id)
            .then((res) => setArticle(res))
            .catch((err) => {
                setError(err);
                addToast('Coś poszło nie tak :(', {
                    appearance: 'error'
                });
                console.error(err);
            })
            .finally(() => setLoading(false));
    }, [id]);

    const successRender = () => {
        return (
            <>
                {loading && <LoadingSpinner />}
                {!loading && <SingleArticleContent article={article as Article} />}
            </>
        );
    };

    return <>{!error && successRender()}</>;
};

export default SingleArticleComponent;
