import { LiveActivity, Rating } from '../../models/dashboard';
import { useTable } from 'react-table';
import { useAppSelector } from '../../context/hooks';
import { currentUserData } from '../../context/userReducer';
import { Link } from 'react-router-dom';
import { useMemo } from 'react';

interface LiveActivityProps {
    liveActivity: any[];
}

const LiveActivityComponent = ({ liveActivity }: LiveActivityProps) => {
    liveActivity = liveActivity.map((activity) => ({
        username: activity.user.username,
        title: activity.task.title,
        date: activity.date.toLocaleTimeString() + ' ' + activity.date.toLocaleDateString()
    }));

    const data = useMemo(() => liveActivity, [liveActivity]);
    const columns = useMemo(
        () => [
            {
                Header: 'Nick',
                accessor: 'username',
                width: 'w-1/3'
            },
            {
                Header: 'Nazwa zadania',
                accessor: 'title',
                width: 'w-1/3'
            },
            {
                Header: 'Data rozwiÄ…zania',
                accessor: 'date',
                width: 'w-1/3'
            }
        ],
        []
    );

    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = useTable({
        columns,
        data
    });

    return (
        <div className="rounded-lg shadow relative inline-block overflow-hidden w-full">
            {liveActivity.length > 0 && (
                <table {...getTableProps()} className="select-none border-separate border-spacing-0">
                    <thead>
                        {headerGroups.map((headerGroup) => (
                            <tr {...headerGroup.getHeaderGroupProps()}>
                                {headerGroup.headers.map((column) => (
                                    <th
                                        {...column.getHeaderProps()}
                                        className={`${column.width} border-b-2 border-gray-300 bg-gray-100 px-5 py-3 
                                                          uppercase font-semibold text-xs text-gray-600 text-center`}
                                    >
                                        {column.render('Header')}
                                    </th>
                                ))}
                            </tr>
                        ))}
                    </thead>
                    <tbody {...getTableBodyProps()}>
                        {rows.map((row) => {
                            prepareRow(row);
                            return (
                                <tr {...row.getRowProps()} className="bg-white text-gray-900 text-sm">
                                    {row.cells.map((cell) => {
                                        return (
                                            <td {...cell.getCellProps()} className="p-0">
                                                <div className="border-b border-gray-300 px-3 h-12 flex justify-center items-center text-center">
                                                    {cell.render('Cell')}
                                                </div>
                                            </td>
                                        );
                                    })}
                                </tr>
                            );
                        })}
                    </tbody>
                </table>
            )}
        </div>
    );
};

export default LiveActivityComponent;
