import React from 'react';
import {
    CategoryScale,
    Chart,
    ChartConfiguration,
    Legend,
    LinearScale,
    LineController,
    LineElement,
    PointElement,
    Title,
    Tooltip,
    TimeScale
} from 'chart.js';
import { getMockedData } from '../mockedData';
import 'chartjs-adapter-date-fns';
import { pl } from 'date-fns/locale';

Chart.register(
    LineController,
    LineElement,
    LinearScale,
    Title,
    CategoryScale,
    PointElement,
    Legend,
    Tooltip,
    TimeScale
);
declare const window: any;

const CardLineChart = () => {
    const data = getMockedData().map((d) => {
        return {
            label: d.username,
            backgroundColor: d.id === 1 ? '#4c51bf' : '#fff',
            borderColor: d.id === 1 ? '#4c51bf' : '#fff',
            data: d.data,
            fill: false
        };
    });

    React.useEffect(() => {
        const config = ({
            type: 'line',
            data: {
                //labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
                datasets: data //[
                //     {
                //         label: new Date().getFullYear(),
                //         backgroundColor: '#4c51bf',
                //         borderColor: '#4c51bf',
                //         data: [65, 78, 66, 44, 56, 67, 75],
                //         fill: false
                //     },
                //     {
                //         label: new Date().getFullYear() - 1,
                //         fill: false,
                //         backgroundColor: '#fff',
                //         borderColor: '#fff',
                //         data: [40, 68, 86, 74, 56, 60, 87]
                //     }
                // ]
            },
            options: {
                maintainAspectRatio: false,
                responsive: true,
                plugins: {
                    legend: {
                        display: true,
                        labels: {
                            color: 'white'
                        },
                        align: 'end',
                        position: 'bottom'
                    },
                    title: {
                        display: false,
                        text: 'Postępy w czasie',
                        fontColor: 'white'
                    },
                    tooltip: {
                        mode: 'nearest',
                        intersect: false
                    }
                },
                hover: {
                    mode: 'nearest',
                    intersect: false
                },
                scales: {
                    x: {
                        type: 'time',
                        adapters: {
                            date: {
                                locale: pl,
                                timeFormat: '24hours'
                            }
                        },
                        time: {
                            tooltipFormat: 'dd MMM yyyy, HH:mm:SS',
                            unit: 'week',
                            displayFormats: {
                                week: 'dd.MM'
                            }
                        },
                        ticks: {
                            source: 'auto',
                            fontColor: 'rgba(255,255,255,.7)'
                        },
                        display: true,
                        title: {
                            display: false,
                            text: 'Data',
                            color: 'white'
                        },
                        grid: {
                            display: false,
                            borderDash: [2],
                            borderDashOffset: [2],
                            color: 'rgba(33, 37, 41, 0.3)',
                            zeroLineColor: 'rgba(0, 0, 0, 0)',
                            zeroLineBorderDash: [2],
                            zeroLineBorderDashOffset: [2]
                        }
                    },

                    y: {
                        ticks: {
                            fontColor: 'rgba(255,255,255,.7)'
                        },
                        display: true,
                        title: {
                            display: false,
                            text: 'Ilość punktów',
                            fontColor: 'white'
                        },
                        grid: {
                            borderDash: [3],
                            borderDashOffset: [3],
                            drawBorder: false,
                            color: 'rgba(255, 255, 255, 0.15)',
                            zeroLineColor: 'rgba(33, 37, 41, 0)',
                            zeroLineBorderDash: [2],
                            zeroLineBorderDashOffset: [2]
                        }
                    }
                },
                parsing: {
                    xAxisKey: 'date',
                    yAxisKey: 'points'
                }
            }
        } as unknown) as ChartConfiguration; //todo: change this

        const canvas = document.getElementById('line-chart') as HTMLCanvasElement;
        let ctx = canvas.getContext('2d')!;
        window.myLine = new Chart(ctx, config);
    }, []);
    return (
        <div className="bg-gray-800 relative flex flex-col min-w-0 break-words w-full shadow-lg rounded-lg">
            <div className="rounded-t mb-0 px-4 py-3 bg-transparent">
                <div className="flex flex-wrap items-center">
                    <div className="relative w-full max-w-full flex-grow flex-1">
                        <h2 className="text-white text-xl font-semibold text-center">Postępy w czasie</h2>
                    </div>
                </div>
            </div>
            <div className="p-4 pt-0 flex-auto h-full">
                {/* Chart */}
                <div className="relative h-80">
                    <canvas id="line-chart" className="h-full" />
                </div>
            </div>
        </div>
    );
};

export default CardLineChart;
