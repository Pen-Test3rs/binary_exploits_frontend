import React from 'react';

import { markdown } from '../../remarkable/remarkable';
import { Task } from '../../models/task';
import SingleTaskContainer from '../styled-components/articles/SingleTaskContainer';
import ArticleCard from '../articles/articleCard';
import { attachmentService } from '../../services/attachmentService';
import { Attachment } from '../../models/attachment';
import fileDownload from 'js-file-download';

interface SingleTaskProps {
    task: Task;
}

const SingleTaskContent = ({ task }: SingleTaskProps) => {
    function wrapAttachments(attachments: Attachment[]) {
        return attachments.map((attachment) => {
            const filename = attachment.file.split('/').pop() as string;
            return (
                <div
                    className="cursor-pointer text-blue-700 hover:text-blue-500"
                    key={attachment.id}
                    onClick={() => {
                        attachmentService.get(attachment.file).then((res) => fileDownload(res, filename));
                    }}
                >
                    {filename}
                </div>
            );
        });
    }

    return (
        <>
            <SingleTaskContainer>
                <h2>{task.title}</h2>
                <h3>Ilość punktów do zdobycia: {task.points}</h3>
                {markdown.render(task.description)}
                <div className="inline-flex mt-1.5">
                    <div className="font-mono bg-gray-800 rounded-lg p-3 my-2 text-white text-md">
                        Adres do zadania: {task.address}:{task.port}
                    </div>
                </div>
                <h3>Powiązane artykuły</h3>
                {task.articles &&
                    task.articles.map((article, i) => {
                        return <ArticleCard key={i} article={article} />;
                        //return <p key={i}>{article.name}</p>;
                    })}
                <h3>Załączniki</h3>
                <div className="mb-5">{wrapAttachments(task.attachments)}</div>
            </SingleTaskContainer>
        </>
    );
};

export default SingleTaskContent;
