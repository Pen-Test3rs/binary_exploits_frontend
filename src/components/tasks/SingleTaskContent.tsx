import React from 'react';

import { markdown } from '../../remarkable/remarkable';
import { Task } from '../../models/task';
import SingleTaskContainer from '../styled-components/articles/SingleTaskContainer';
import ArticleCard from '../articles/articleCard';
import { Attachment } from '../../models/attachment';

interface SingleTaskProps {
    task: Task;
}

const SingleTaskContent = ({ task }: SingleTaskProps) => {
    function wrapAttachments(attachments: Attachment[]) {
        return attachments.map((attachment) => {
            const filename = attachment.file.split('/').pop() as string;
            return (
                <div>
                    <a
                        className="text-blue-800 hover:text-blue-400"
                        key={attachment.id}
                        href={attachment.file}
                        download={filename}
                        target="_blank"
                    >
                        {filename}
                    </a>
                </div>
            );
        });
    }

    return (
        <>
            <SingleTaskContainer>
                <div className="flex flex-wrap items-center mr-8">
                    <p className="flex-col w-2/3 text-lg font-bold">{task.title}</p>
                    <p className="flex-col w-1/3 font-bold text-right">{task.points} punktów</p>
                    <div className="flex-col w-full justify-center">
                        {task.labels.length > 0 ? <span className="font-serif"> Tagi: </span> : null}
                        {task.labels.map((tag, i) => {
                            return (
                                <span
                                    key={i}
                                    className="m-1 bg-gray-200 hover:bg-gray-300 rounded-full px-2 py-1 font-bold text-xs leading-loose cursor-pointer"
                                >
                                    #{tag}
                                </span>
                            );
                        })}
                    </div>
                </div>
                <hr className="w-full" />
                <div className="flex flex-wrap">
                    <div className="flex-col w-2/3 lg:w-1/2">
                        {markdown.render(task.description)}
                        <div className="font-bold mt-1.5">Adres do zadania:</div>
                        <div className="inline-flex">
                            <div className="font-mono bg-gray-800 rounded-lg px-3 py-2 my-1 text-white text-md">
                                {task.address}:{task.port}
                            </div>
                        </div>
                    </div>
                    <div className="flex-col md:w-1/3 lg:w-1/2 pl-6">
                        <div className="font-bold">Powiązane artykuły</div>
                        {task.articles &&
                            task.articles.map((article, i) => {
                                //return <ArticleCard key={i} article={article} />;
                                return <p key={i}>{article.name}</p>;
                            })}
                        <div className="font-bold mt-5">Załączniki</div>
                        {wrapAttachments(task.attachments)}
                    </div>
                </div>
            </SingleTaskContainer>
        </>
    );
};

export default SingleTaskContent;
