import React, { useEffect, useState } from 'react';
import TaskCard from '../single/taskCard';
import Pagination from '../../pagination/pagination';
import { tasksService } from '../../../services/tasksService';
import { apiUrls } from '../../../utils/apiUrls';
import { TaskCardData } from '../../../models/task';

const TasksComponent = () => {
    const [tasks, setTasks] = useState<TaskCardData[]>([]);
    const pageLimit = 5;
    const dataLimit = 9;
    useEffect(() => {
        (async () => {
            tasksService
                .getAll(apiUrls.TASKS)
                .then((a) => {
                    setTasks(a);
                    console.log(a);
                })
                .catch((err) => {
                    //TODO: handle error
                });
        })();
    }, []);

    // if (tasks.length < 4) {
    //     for (let i = 4; i < 32; i++)
    //         tasks.push({
    //             id: i,
    //             name_id: 'buffer_overflow',
    //             labels: ['tag1', 'tag2', 'tag3'],
    //             title: 'PrzepeÅ‚nienie bufora',
    //             level: Levels.Hard,
    //             points: 100,
    //             status: 'ok'
    //         });
    // }

    const wrapTasks = () => {
        return tasks.map((task, i) => (
            <div key={task.id} className="flex justify-center w-full md:w-1/2 lg:w-1/3 py-4 px-4">
                <TaskCard key={task.id} taskData={task} />
            </div>
        ));
    };

    return (
        <Pagination
            data={wrapTasks()}
            pageLimit={Math.min(Math.ceil(tasks.length / dataLimit), pageLimit)}
            dataLimit={dataLimit}
        />
    );
};

export default TasksComponent;
