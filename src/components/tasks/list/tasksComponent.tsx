import React, { useState } from 'react';
import TaskCard from '../single/taskCard';
import { taskService } from '../../../services/taskService';
import { TaskCardData } from '../../../models/task';
import useAxiosEffect from '../../generic/useAxiosEffect';
import ComponentStateHandler from '../../generic/componentStateHandler';

const TasksComponent = () => {
    const [tempRefresher, setTempRefresher] = useState(0); //TODO: use sth better
    const state = useAxiosEffect<TaskCardData[]>(taskService.getAll, [tempRefresher]);
    const tasks = state.data as TaskCardData[];

    const refreshTasksCallback = () => {
        // (async () => {
        //     taskService
        //         .getAll()
        //         .then((a) => {
        //             setTasks(a);
        //             console.log(a);
        //         })
        //         .catch((err) => {
        //             //TODO: handle error
        //         });
        // })();
        setTempRefresher(tempRefresher + 1);
    };

    return <ComponentStateHandler state={state}>
        <div className="flex w-full justify-center">
            <div className="flex flex-wrap w-9/12 sm:w-4/6 md:w-full xl:w-5/6">
                {tasks && tasks.map((task, i) => (
                    <div key={task.id} className="flex justify-center w-full md:w-1/2 lg:w-1/3 py-4 px-4">
                        <TaskCard key={task.id} taskData={task} refreshTasksCallback={refreshTasksCallback} />
                    </div>
                ))}
            </div>
        </div>
    </ComponentStateHandler>
};

export default TasksComponent;
