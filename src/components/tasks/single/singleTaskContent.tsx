import React from 'react';

import { markdown } from '../../../remarkable/remarkable';
import { Task } from '../../../models/task';
import SingleTaskContainer from '../../styled-components/tasks/SingleTaskContainer';
import { Attachment } from '../../../models/attachment';
import { SolveData } from '../../../models/solveData';
import { tasksService } from '../../../services/tasksService';
import SolveForm from './solveForm';
import { wrapTags } from '../../shared/tags/wrapTags';
import ArticleCard from '../../articles/articleCard';
import { Status } from '../../../models/status';

interface SingleTaskProps {
    task: Task;
}

const SingleTaskContent = ({ task }: SingleTaskProps) => {
    const onSubmit = (data: SolveData) => {
        data.id = task.id;
        tasksService.sendSolution(data).then((response) => {
            console.log(response);
            if (response.success) {
                alert('Sukces!');
            } else {
                alert('Nieprawidłowa flaga');
            }
        });
    };

    const wrapAttachments = (attachments: Attachment[]) => {
        return attachments.map((attachment, i) => {
            const filename = attachment.file.split('/').pop();
            return (
                <div key={attachment.id}>
                    <a
                        className="text-blue-800 hover:text-blue-400"
                        href={attachment.file}
                        download={filename}
                        target="_blank"
                        rel="noreferrer"
                    >
                        {filename}
                    </a>
                </div>
            );
        });
    };

    return (
        <>
            <SingleTaskContainer>
                <div className="flex flex-wrap items-center mr-8">
                    <h3 className="flex-col w-2/3">{task.title}</h3>
                    <h4 className="flex-col w-1/3 text-right">{task.points} punktów</h4>
                    <div className="flex-col w-full justify-center">
                        {task.labels.length > 0 && <span className="font-serif"> Tagi: </span>}
                        {wrapTags(task.labels)}
                    </div>
                </div>
                <hr className="w-full" />
                <div className="flex flex-wrap">
                    <div className="flex-col w-full md:w-2/3 lg:w-1/2">{markdown.render(task.description)}</div>
                    <div className="flex-col w-full md:w-1/3 lg:w-1/2 md:pl-6 mt-2 md:mt-0">
                        {task.articles && task.articles.length > 0 && (
                            <>
                                <div className="font-bold">Powiązane artykuły</div>
                                {task.articles.map((article) => {
                                    return (
                                        <div key={article.id} className="flex w-full py-2">
                                            <ArticleCard article={article} />
                                        </div>
                                    );
                                    //return <p key={i}>{article.name}</p>;
                                })}
                            </>
                        )}
                        <div className="font-bold mt-1.5">Adres do zadania:</div>
                        <div className="inline-flex">
                            <div className="font-mono bg-gray-800 rounded-lg px-2 py-1.5 my-1 text-white text-base">
                                {task.address}:{task.port}
                            </div>
                        </div>
                        {task.attachments.length > 0 && <div className="font-bold mt-1.5">Załączniki</div>}
                        {wrapAttachments(task.attachments)}
                    </div>
                    {task.status !== Status.SOLVED && (
                        <div className="flex-col w-full mt-5">
                            <SolveForm onSubmit={onSubmit} />
                        </div>
                    )}
                </div>
            </SingleTaskContainer>
        </>
    );
};

export default SingleTaskContent;
