import React from 'react';
import { Levels } from './levels';
import { TasksList } from '../../models/task';

interface exerciseCardProps {
    taskData: TasksList;
}

const TaskCard = ({ taskData }: exerciseCardProps) => {
    let color, levelText;
    switch (taskData.level) {
        case Levels.VeryEasy:
            color = 'bg-green-400';
            levelText = 'Bardzo łatwy';
            break;
        case Levels.Easy:
            color = 'bg-green-600';
            levelText = 'Łatwy';
            break;
        case Levels.Medium:
            color = 'bg-yellow-500';
            levelText = 'Średni';
            break;
        case Levels.Hard:
            color = 'bg-red-500';
            levelText = 'Trudny';
            break;
        case Levels.VeryHard:
            color = 'bg-red-700';
            levelText = 'Bardzo trudny';
            break;
        default:
            break;
    }

    return (
        <div className="w-full md:w-1/2 lg:w-4/12 py-4 px-2 animate-fade-in-down">
            <a href="../articles">
                <div className="bg-white relative shadow p-2 rounded-lg text-gray-800 hover:shadow-lg">
                    <div
                        className={`right-0 mt-2 rounded-l-full absolute text-center font-bold text-xs text-white px-2 py-1 ${color}`}
                    >
                        {levelText}
                    </div>
                    <div className="py-2 px-3">
                        <div className="font-bold font-title text-2xl">{taskData.title}</div>
                        {/*<div className="text-sm font-light text-center my-2">{text}</div>*/}
                    </div>
                    <div className="flex flex-wrap px-3">
                        <svg
                            xmlns="http://www.w3.org/2000/svg"
                            className="h-6 w-6 text-center"
                            viewBox="0 0 20 20"
                            fill="currentColor"
                        >
                            <path
                                fillRule="evenodd"
                                d="M12.395 2.553a1 1 0 00-1.45-.385c-.345.23-.614.558-.822.88-.214.33-.403.713-.57 1.116-.334.804-.614 1.768-.84 2.734a31.365 31.365 0 00-.613 3.58 2.64 2.64 0 01-.945-1.067c-.328-.68-.398-1.534-.398-2.654A1 1 0 005.05 6.05 6.981 6.981 0 003 11a7 7 0 1011.95-4.95c-.592-.591-.98-.985-1.348-1.467-.363-.476-.724-1.063-1.207-2.03zM12.12 15.12A3 3 0 017 13s.879.5 2.5.5c0-1 .5-4 1.25-4.5.5 1 .786 1.293 1.371 1.879A2.99 2.99 0 0113 13a2.99 2.99 0 01-.879 2.121z"
                                clipRule="evenodd"
                            />
                        </svg>
                        <div className="font-bold text-lg text-center mx-0.5">{taskData.points}</div>
                        <div className="font-serif text-lg text-center mx-0.5">punktów</div>
                    </div>
                    {taskData.labels.length > 0 ? <hr className="my-1.5" /> : null}
                    <div className="px-3 flex flex-wrap w-full">
                        {taskData.labels.map((tag, i) => {
                            return (
                                <span
                                    key={i}
                                    className="m-1 bg-gray-200 hover:bg-gray-300 rounded-full px-2 font-bold text-sm leading-loose cursor-pointer"
                                >
                                    #{tag}
                                </span>
                            );
                        })}
                    </div>
                </div>
            </a>
        </div>
    );
};

export default TaskCard;
