import React, { PropsWithChildren } from 'react';
import { AxiosError } from 'axios';
import LoadingSpinner from '../spinner/loadingSpinner';
import { Loading } from 'react-loading-dot';
import { FaRegCheckCircle, FaTimesCircle } from 'react-icons/all';

export interface IStateHandlerData<T> {
    isLoading: boolean;
    error: AxiosError | undefined;
    data: T | undefined;
}

interface StateHandlerInterface<T> {
    state: IStateHandlerData<T>;
}

interface ErrorComponentInterface {
    desc?: string;
}

const ErrorComponent = ({ desc }: ErrorComponentInterface) => {
    return (
        <div className="w-1/2 mx-auto space-y-6">
            <div className="px-4 py-3 text-red-700 bg-red-100 rounded-lg flex justify-center items-center">
                <FaTimesCircle className="mr-1" />
                Wystąpił błąd!
            </div>
            <div>
                {desc && (
                    <details>
                        <summary className="font-bold mb-3">Szczegóły</summary>
                        {desc}
                    </details>
                )}
            </div>
        </div>
    );
};

const ComponentStateHandler = ({
    children,
    state: { error, isLoading, data }
}: PropsWithChildren<StateHandlerInterface<any>>) => {
    if (isLoading) {
        return <Loading background={'rgb(79, 70, 229)'} duration={'0.7s'} margin={'0.5rem'} size={'1.1rem'} />;
    }

    if (error || data === undefined) {
        console.log(error);
        console.log(error?.message);
        return <ErrorComponent desc={error?.message} />;
    }

    return <>{children}</>;
};

export default ComponentStateHandler;
