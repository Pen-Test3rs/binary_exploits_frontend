import React, { PropsWithChildren } from 'react';
import { wrapTags } from '../shared/tags/wrapTags';
import { LabelColors } from '../../models/labelColors';
import { labelColorToStyle } from './labelColorToStyle';
import { statusToStyle } from './statusToStyle';
import { TaskStatus } from '../../models/task';
import { FaLock } from 'react-icons/all';

interface CardProps {
    title: string;
    labelText?: string;
    labelColor?: LabelColors;
    tags?: string[];
    taskStatus?: TaskStatus;
    onTaskModal?: boolean;
}

const Card = ({
    onTaskModal = false,
    title,
    children,
    labelText = '',
    labelColor = LabelColors.YELLOW,
    tags = [],
    taskStatus = TaskStatus.OK
}: PropsWithChildren<CardProps>) => {
    return (
        <div
            className={`${statusToStyle(taskStatus, onTaskModal)}
            relative text-gray-800 ${!onTaskModal && 'h-32 py-3'} px-2 shadow rounded-lg`}
        >
            {labelText.length > 0 && (
                <div
                    className={`right-0 mt-2 rounded-l-full absolute text-center font-bold text-xs text-white px-2 py-1 ${labelColorToStyle(
                        labelColor
                    )}`}
                >
                    {labelText}
                </div>
            )}
            {taskStatus === TaskStatus.BLOCKED && <FaLock className="right-5 mt-17 text-3xl absolute" />}
            <div className="py-2 px-3">
                <div className="font-bold font-title text-center">{title}</div>
                {!onTaskModal && (
                    <div className="text-sm font-light text-center my-2 whitespace-pre-line">{children}</div>
                )}
            </div>
            {tags.length > 0 && <div className="flex flex-wrap w-full justify-center">{wrapTags(tags)}</div>}
        </div>
    );
};

export default Card;
