import formatDate from '../../utils/dateFormatter';
import React from 'react';
import { UserData } from '../../models/user';
import { FaChartLine, FaCheck } from 'react-icons/fa';
import RecentlySolvedListRenderer from './recentlySolvedListRenderer';
import CardLineChart from '../charts/cardLineChart';
import { prepareChartData } from '../charts/prepareChartData';
import { Rating } from '../../models/dashboard';

const mapUserDataToRating = (userData: UserData): Rating[] => {
    return [
        {
            id: userData.id,
            username: userData.username,
            points: userData.points,
            solved: userData.solved,
            place: userData.place,
            last_solved: userData.solutions
                .map((solution) => {
                    return { date: solution.date, points: solution.task.points };
                })
                .concat({ date: userData.date_joined, points: 0 })
        }
    ];
};

interface ProfileContentsProps {
    userData: UserData;
}

const ProfileContents = ({ userData }: ProfileContentsProps) => {
    const data = prepareChartData(mapUserDataToRating(userData));

    const label = (left: string, right: any) => {
        return (
            <li className="flex justify-center mx-auto items-center px-2">
                <span className="font-bold mr-1"> {left}</span>
                {right}
            </li>
        );
    };

    const userInfo = () => {
        return (
            <ul className="mx-10 list-none pl-0 flex flex-wrap justify-between items-center">
                {label('Ranking:', userData.place)}
                {label('Punkty:', userData.points)}
                {label('Rozwiązane zadania:', userData.solutions.length)}
                {label('Data dołączenia:', formatDate(userData.date_joined))}
            </ul>
        );
    };

    return (
        <div className="flex flex-row flex-wrap w-full">
            <div className="flex flex-col lg:w-4/12 mx-auto my-6 px-3">
                <h3 className="flex items-center justify-center space-x-2 mb-4 w-full">
                    <span>Ostatnio rozwiązane</span>
                    <FaCheck />
                </h3>

                <RecentlySolvedListRenderer solves={userData.solutions} />
            </div>

            <div className="flex flex-col lg:w-8/12 mx-auto my-6 w-full">
                <h3 className="flex justify-center items-center space-x-3 mb-4">
                    <span>Postępy w czasie</span>
                    <FaChartLine />
                </h3>
                <div className="mx-4 mb-4">
                    <CardLineChart ratingData={data} height={'h-80'} />
                </div>
                {userInfo()}
            </div>
        </div>
    );
};

export default ProfileContents;
