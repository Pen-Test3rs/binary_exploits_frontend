import formatDate from '../../utils/dateFormatter';
import React from 'react';
import { UserData } from '../../models/user';
import { FaChartLine, FaCheck } from 'react-icons/fa';
import RecentlySolvedListRenderer from './recentlySolvedListRenderer';
import CardLineChart from '../charts/cardLineChart';
import { prepareChartData } from '../charts/prepareChartData';
import { Rating } from '../../models/dashboard';
import { IoIosStats } from 'react-icons/all';
import CustomHeader from '../generic/CustomHeader';

const mapUserDataToRating = (userData: UserData): Rating[] => {
    return [
        {
            id: userData.id,
            username: userData.username,
            points: userData.points,
            solved: userData.solved,
            place: userData.place,
            last_solved: userData.solutions
                .map((solution) => {
                    return { date: solution.date, points: solution.task.points };
                })
                .concat({ date: userData.date_joined, points: 0 })
        }
    ];
};

interface ProfileContentsProps {
    userData: UserData;
}

const ProfileContents = ({ userData }: ProfileContentsProps) => {
    const data = prepareChartData(mapUserDataToRating(userData));

    const label = (left: string, right: any) => {
        return (
            <li className="flex justify-center px-2 w-full">
                <span className="font-bold mr-1"> {left}</span>
                {right}
            </li>
        );
    };

    const userInfo = () => {
        return (
            <ul className="mt-4 mb-5 space-y-1.5 list-none pl-0 flex flex-col justify-between items-center">
                {label('Ranking:', userData.place)}
                {label('Punkty:', userData.points)}
                {label('Rozwiązane zadania:', userData.solutions.length)}
                {label('Data dołączenia:', formatDate(userData.date_joined))}
            </ul>
        );
    };

    return (
        <div className="flex flex-col lg:pt-0">
            <div className="bg-white rounded-lg flex flex-col self-stretch shadow my-2">
                <CustomHeader title={'Postępy w czasie'} Icon={FaChartLine} />
                <div className="w-full">
                    <CardLineChart ratingData={data} className={'h-64 md:h-80 rounded-b-lg'} />
                </div>
            </div>
            <div className="flex flex-col md:flex-row md:gap-4 w-full lg:w-auto">
                <div className={'bg-white rounded-lg flex flex-col items-stretch shadow my-2 flex-grow md:self-start'}>
                    <CustomHeader title={'Statystyki'} Icon={IoIosStats} />
                    {userInfo()}
                </div>
                <div className={'bg-white rounded-lg flex flex-col items-stretch shadow my-2 flex-grow md:self-start'}>
                    <CustomHeader title={'Ostatnio rozwiązane'} Icon={FaCheck} />
                    <div className="p-4">
                        <RecentlySolvedListRenderer solves={userData.solutions} />
                    </div>
                </div>
            </div>
        </div>
    );
};

export default ProfileContents;
