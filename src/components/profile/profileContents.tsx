import formatDate from '../../utils/dateFormatter';
import RecentlySolved from './recentlySolved';
import ProgressStats from './progressStats';
import React from 'react';
import { UserData } from '../../models/user';
import { useAppSelector } from '../../context/hooks';
import { currentUserData } from '../../context/userReducer';
import { Link } from 'react-router-dom';

interface ProfileContentsProps {
    userData: UserData;
}

const ProfileContents = ({ userData }: ProfileContentsProps) => {
    const user = useAppSelector(currentUserData);
    const isOwnProfile = userData.id === user.id;

    const labelComponent = (left: string, right: string | number) => {
        return (
            <li>
                <span className="font-bold"> {left}</span> {right}
            </li>
        );
    };

    const settingsButton = () => {
        return (
            <Link
                to={'/settings'}
                className="flex justify-center items-center w-36 py-2 my-3 mx-auto text-sm font-medium rounded-md text-white bg-indigo-500 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
            >
                Ustawienia
            </Link>
        );
    };

    const email = () => {
        return (
            <div className="flex justify-center items-center">
                <span className="text-center text-sm">{user.email}</span>
            </div>
        );
    };

    return (
        <div className="lg:flex bg-white shadow-xl rounded pb-6">
            <div className="lg:w-4/12 mx-auto my-6">
                <h1 className="text-center">{userData.username}</h1>
                {isOwnProfile && email()}
                {isOwnProfile && settingsButton()}
                <ul className="list-none space-y-2">
                    {labelComponent('Ranking:', userData.place)}
                    {labelComponent('Punkty:', userData.points)}
                    {labelComponent('Rozwiązane zadania:', userData.solutions.length)}
                    {labelComponent('Data dołączenia:', formatDate(userData.date_joined))}
                </ul>
                <RecentlySolved solves={userData.solutions} viewingOwn={isOwnProfile} />
            </div>

            <div className="lg:w-8/12 my-6">
                <ProgressStats userData={userData} />
            </div>
        </div>
    );
};

export default ProfileContents;
