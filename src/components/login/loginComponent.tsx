import React, { useState } from 'react';
import { LoginData } from '../../models/loginData';
import { authService } from '../../services/authService';
import LoginForm from './form/loginForm';
import { useToasts } from 'react-toast-notifications';
import { useHistory } from 'react-router-dom';
import { useAppDispatch } from '../../context/hooks';
import { User } from '../../models/user';
import { loginFailure, loginSuccess } from '../../context/userReducer';

const loginSuccessfulText = 'Log in successful!';
const loginErrorText = 'Error occurred. Try again later :(';

const LoginComponent = () => {
    const [loading, setLoading] = useState(false);
    const { addToast } = useToasts();
    const history = useHistory();
    const dispatch = useAppDispatch();

    const loggedCallback = (user: User) => {
        setLoading(false);

        dispatch(loginSuccess(user));

        addToast(loginSuccessfulText, {
            appearance: 'success'
        });

        history.push('/dashboard');
    };

    const errorCallback = (err: string) => {
        setLoading(false);

        console.log(err);

        dispatch(loginFailure());

        //TODO: use error texts from backend
        addToast(loginErrorText, {
            appearance: 'error'
        });
    };

    const onSubmit = (data: LoginData) => {
        if (loading) {
            return;
        }

        setLoading(true);
        authService.login(data).then(loggedCallback).catch(errorCallback);
    };

    return <LoginForm loading={loading} onSubmit={onSubmit} />;
};

export default LoginComponent;
