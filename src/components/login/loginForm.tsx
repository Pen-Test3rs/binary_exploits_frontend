import LoginFormPasswordForgot from './loginFormPasswordForgot';
import React from 'react';
import { FieldError, FieldName, useForm } from 'react-hook-form';
import { LoginData } from '../../models/loginData';
import FormInputField from '../shared/form/formInputField';
import { formTexts } from '../shared/form/formTexts';
import SubmitButton from '../shared/form/submitButton';
import FormHeaderComponent from '../shared/form/formHeader';

interface LoginFormProps {
    loading: boolean;
    onSubmit: (data: LoginData) => void;
    backendErrors: Record<string, string | undefined>;
}

const LoginForm = ({ loading, backendErrors, onSubmit }: LoginFormProps) => {
    const {
        register,
        handleSubmit,
        setError,
        formState: { errors }
    } = useForm<LoginData>({ mode: 'all' });

    const handleBackendErrors = (field: string): FieldError | undefined => {
        const message = backendErrors[field];
        if (message === undefined) {
            return undefined;
        }

        const err: FieldError = {
            type: 'server',
            message: message
        };

        setError(field as FieldName<LoginData>, err);
        backendErrors[field] = undefined;
    };

    return (
        <div className="flex items-center justify-center">
            <div className="max-w-md w-full mt-6">
                <FormHeaderComponent
                    mainText={'Zaloguj się'}
                    smallText={'Nie masz jeszcze konta? '}
                    link={'/register'}
                    linkText={'Załóż je!'}
                />

                <form className="mt-8 space-y-2" onSubmit={handleSubmit(onSubmit)} method="POST">
                    <FormInputField
                        placeholder={'Nazwa użytkownika'}
                        errors={errors?.username || handleBackendErrors('username')}
                        registerOpts={register('username', {
                            required: formTexts.requiredField
                        })}
                        additionalStyles={'rounded-t-md'}
                    />

                    <FormInputField
                        type={'password'}
                        placeholder={'Hasło'}
                        errors={errors?.password || handleBackendErrors('password')}
                        registerOpts={register('password', {
                            required: formTexts.requiredField
                        })}
                        additionalStyles={'rounded-b-md'}
                    />

                    <LoginFormPasswordForgot />

                    <SubmitButton loading={loading} loadingText={'Logowanie...'} text={'Zaloguj się'} />
                </form>
            </div>
        </div>
    );
};

export default LoginForm;
