import LoginFormHeader from './loginFormHeader';
import LoginFormPasswordForgot from './loginFormPasswordForgot';
import LoginFormSubmitButton from './loginFormSubmitButton';
import React, { useRef } from 'react';
import { useForm } from 'react-hook-form';
import { LoginData } from '../../../models/loginData';
import LoginFormInput from './loginFormInput';

const requiredFieldText = 'This field is required';

interface LoginFormProps {
    onSubmit: (data: LoginData) => void;
    loading: boolean;
}

const LoginForm = ({ loading, onSubmit }: LoginFormProps) => {
    const {
        register,
        handleSubmit,
        watch,
        formState: { errors }
    } = useForm<LoginData>({ mode: 'onChange' });

    const password = useRef({});
    password.current = watch('password', '');

    return (
        <div className="min-h-screen flex items-center justify-center bg-gray-100 py-12 px-4 sm:px-6 lg:px-8">
            <div className="max-w-md w-full space-y-8">
                <LoginFormHeader />
                <form
                    className="mt-8 space-y-6"
                    onSubmit={handleSubmit(onSubmit)}
                    method="POST"
                >
                    <div className="rounded-md shadow-sm space-y-3">
                        <LoginFormInput
                            id={'nick'}
                            type={'text'}
                            placeholder={'Your nick'}
                            errors={errors?.nick}
                            registerOpts={register('nick', {
                                required: requiredFieldText,
                                minLength: {
                                    value: 3,
                                    message: 'Provided text is too short'
                                }
                            })}
                            additionalStyles={'rounded-t-md'}
                        />

                        <LoginFormInput
                            id={'email'}
                            type={'text'}
                            placeholder={'Your email'}
                            errors={errors?.email}
                            registerOpts={register('email', {
                                required: requiredFieldText,
                                pattern: {
                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i,
                                    message: 'Enter a valid e-mail address'
                                }
                            })}
                        />

                        <LoginFormInput
                            id={'password'}
                            type={'password'}
                            placeholder={'Your password'}
                            errors={errors?.password}
                            registerOpts={register('password', {
                                required: requiredFieldText,
                                minLength: {
                                    value: 8,
                                    message:
                                        'Password cannot be shorter than 8 characters'
                                }
                            })}
                        />

                        <LoginFormInput
                            id={'passwordConfirmation'}
                            type={'password'}
                            placeholder={'Your password again'}
                            errors={errors?.passwordConfirmation}
                            registerOpts={register('passwordConfirmation', {
                                required: requiredFieldText,
                                minLength: {
                                    value: 8,
                                    message:
                                        'Password cannot be shorter than 8 characters'
                                },
                                validate: (value: string) =>
                                    value === password.current ||
                                    "Passwords don't match"
                            })}
                            additionalStyles={'rounded-b-md'}
                        />
                    </div>

                    <LoginFormPasswordForgot />

                    <LoginFormSubmitButton loading={loading} />
                </form>
            </div>
        </div>
    );
};

export default LoginForm;
