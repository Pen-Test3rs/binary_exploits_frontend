import React, { useState } from 'react';
import { authService } from '../../services/authService';
import RegisterForm from './form/registerForm';
import { RegisterData } from '../../models/registerData';
import { useToasts } from 'react-toast-notifications';
import { useAppDispatch } from '../../context/hooks';
import { useHistory } from 'react-router-dom';
import { registerFailure, registerSuccess } from '../../context/userReducer';
import { User } from '../../models/user';

const registerSuccessfulText = 'Register successful!';
const registerErrorText = 'Error occurred. Try again later :(';

const RegisterComponent = () => {
    const [loading, setLoading] = useState(false);
    const { addToast } = useToasts();
    const history = useHistory();
    const dispatch = useAppDispatch();

    const registeredCallback = (loggedUser: User) => {
        console.log(loggedUser);

        dispatch(registerSuccess(loggedUser));

        addToast(registerSuccessfulText, {
            appearance: 'success'
        });

        setLoading(false);
        history.push('/dashboard');
    };

    const errorCallback = (err: string) => {
        console.log(err);

        dispatch(registerFailure());

        addToast(registerErrorText, {
            appearance: 'error'
        });
        setLoading(false);
    };

    const onSubmit = (data: RegisterData) => {
        if (loading) {
            return;
        }

        setLoading(true);

        authService.registerUser(data).then(registeredCallback).catch(errorCallback);
    };

    return <RegisterForm loading={loading} onSubmit={onSubmit} />;
};

export default RegisterComponent;
