import React, { useState } from 'react';
import { authService } from '../../services/authService';
import RegisterForm from './registerForm';
import { RegisterData } from '../../models/registerData';
import { useToasts } from 'react-toast-notifications';
import { useAppDispatch } from '../../context/hooks';
import { useHistory } from 'react-router-dom';
import { registerFailure, registerSuccess } from '../../context/userReducer';
import { User } from '../../models/user';
import { formTexts } from '../shared/form/formTexts';

const RegisterComponent = () => {
    const [loading, setLoading] = useState(false);
    const { addToast } = useToasts();
    const history = useHistory();
    const dispatch = useAppDispatch();

    const registeredCallback = (user: User) => {
        setLoading(false);
        dispatch(registerSuccess(user));

        addToast(formTexts.registerSuccessful, {
            appearance: 'success'
        });

        history.push('/dashboard');
    };

    const errorCallback = (err: string) => {
        setLoading(false);

        console.error(err);

        dispatch(registerFailure());

        //TODO: use error texts from backend
        addToast(formTexts.registerError, {
            appearance: 'error'
        });
    };

    const onSubmit = (data: RegisterData) => {
        if (loading) {
            return;
        }

        setLoading(true);
        authService.register(data).then(registeredCallback).catch(errorCallback);
    };

    return <RegisterForm loading={loading} onSubmit={onSubmit} />;
};

export default RegisterComponent;
