import { useEffect, useRef } from 'react';
import {
    CategoryScale,
    Chart,
    Legend,
    LinearScale,
    LineController,
    LineElement,
    PointElement,
    TimeScale,
    Title,
    Tooltip
} from 'chart.js';
import 'chartjs-adapter-date-fns';
import { getConfig } from './lineChartConfig';
import { Rating } from '../../models/dashboard';

Chart.register(
    LineController,
    LineElement,
    LinearScale,
    Title,
    CategoryScale,
    PointElement,
    Legend,
    Tooltip,
    TimeScale
);

interface ChartLineProps {
    ratingData: Rating[];
    title?: string;
    displayLegend?: boolean;
    height: string;
}

const colors = [
    '#dfff00',
    '#de3163',
    '#4c51bf',
    '#fff',
    '#ffbf00',
    '#ff7f50',
    '#9fe2bf',
    '#40e0d0',
    '#6495ed',
    '#ccccff'
];

const CardLineChart = ({ ratingData, title = '', displayLegend = false, height }: ChartLineProps) => {
    const chartContainer = useRef<HTMLCanvasElement>(null);

    useEffect(() => {
        if (!chartContainer.current) {
            return;
        }

        const datasets = ratingData?.map((d, i) => {
            return {
                label: d.username,
                backgroundColor: colors[i % colors.length],
                borderColor: colors[i % colors.length],
                data: d.last_solved,
                fill: false
            };
        });

        let ctx = chartContainer.current.getContext('2d');
        const chart = new Chart(ctx!, getConfig(datasets, displayLegend));

        return () => chart.destroy();
    }, [chartContainer, ratingData]);

    return (
        <div className="bg-gray-800 relative flex flex-col min-w-0 break-words w-full shadow-lg rounded-lg px-4 py-3">
            <h2 className="text-white text-xl font-semibold text-center">{title}</h2>
            <div className={`mt-3 ${height}`}>
                <canvas ref={chartContainer} className="h-full flex-auto" />
            </div>
        </div>
    );
};

export default CardLineChart;
